
package com.vmware.vim25;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "VimService", targetNamespace = "urn:vim25Service", wsdlLocation = "vimService.wsdl")
public class VimService
    extends Service
{

    private final static URL VIMSERVICE_WSDL_LOCATION;
    private final static WebServiceException VIMSERVICE_EXCEPTION;
    private final static QName VIMSERVICE_QNAME = new QName("urn:vim25Service", "VimService");

    static {
        VIMSERVICE_WSDL_LOCATION = com.vmware.vim25.VimService.class.getResource("vimService.wsdl");
        WebServiceException e = null;
        if (VIMSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'vimService.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        VIMSERVICE_EXCEPTION = e;
    }

    public VimService() {
        super(__getWsdlLocation(), VIMSERVICE_QNAME);
    }

    public VimService(WebServiceFeature... features) {
        super(__getWsdlLocation(), VIMSERVICE_QNAME, features);
    }

    public VimService(URL wsdlLocation) {
        super(wsdlLocation, VIMSERVICE_QNAME);
    }

    public VimService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, VIMSERVICE_QNAME, features);
    }

    public VimService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public VimService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns VimPortType
     */
    @WebEndpoint(name = "VimPort")
    public VimPortType getVimPort() {
        return super.getPort(new QName("urn:vim25Service", "VimPort"), VimPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns VimPortType
     */
    @WebEndpoint(name = "VimPort")
    public VimPortType getVimPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:vim25Service", "VimPort"), VimPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (VIMSERVICE_EXCEPTION!= null) {
            throw VIMSERVICE_EXCEPTION;
        }
        return VIMSERVICE_WSDL_LOCATION;
    }

}
